.background {
    position: fixed;
    inset: 0;
    overflow: hidden;
    background: var(--bg-primary, #ffffff);
    background: linear-gradient(135deg, 
        var(--bg-primary, #ffffff) 0%,
        var(--bg-secondary, #f8f9fa) 100%);
    transition: all 0.5s ease-in-out;
}

.mounted {
    opacity: 1;
}

.dark {
    background: linear-gradient(135deg, 
        var(--bg-primary-dark, #0a0a0a) 0%,
        var(--bg-secondary-dark, #1a1a1a) 100%);
}

.particleCanvas {
    position: absolute;
    inset: 0;
    opacity: 0.6;
}

.linesContainer {
    position: absolute;
    inset: 0;
    overflow: hidden;
    opacity: 0.4;
    transform: scale(1.1);
}

.line {
    position: absolute;
    width: 200%;
    height: 1px;
    background: linear-gradient(
        90deg,
        transparent 0%,
        var(--accent-primary, #007bff) 50%,
        transparent 100%
    );
    animation: moveLine 8s infinite ease-in-out;
    opacity: 0;
    transform-origin: left center;
    left: -50%;
}

.line::after {
    content: '';
    position: absolute;
    inset: 0;
    background: inherit;
    filter: blur(4px);
}

.dark .line {
    background: linear-gradient(
        90deg,
        transparent 0%,
        var(--accent-primary-dark, #00d5ff) 50%,
        transparent 100%
    );
}

.hexGrid {
    position: absolute;
    inset: 0;
    opacity: 0;
    transition: opacity 1s ease-in-out;
}

.hexGrid.mounted {
    opacity: 0.15;
}

.hexagon {
    position: absolute;
    width: 60px;
    height: 34.64px;
    background: currentColor;
    transform: scale(0);
    animation: pulseHex 3s infinite ease-in-out;
}

.hexagon::before,
.hexagon::after {
    content: '';
    position: absolute;
    width: 0;
    border-left: 30px solid transparent;
    border-right: 30px solid transparent;
}

.hexagon::before {
    bottom: 100%;
    border-bottom: 17.32px solid currentColor;
}

.hexagon::after {
    top: 100%;
    border-top: 17.32px solid currentColor;
}

.gradientOverlay {
    position: absolute;
    inset: 0;
    background: radial-gradient(
        circle at 50% 50%,
        transparent 0%,
        var(--bg-primary, #ffffff) 100%
    );
    opacity: 0.8;
    mix-blend-mode: overlay;
}

.dark .gradientOverlay {
    background: radial-gradient(
        circle at 50% 50%,
        transparent 0%,
        var(--bg-primary-dark, #0a0a0a) 100%
    );
}

.orbContainer {
    position: absolute;
    inset: 0;
    overflow: hidden;
    filter: blur(40px);
}

.orb {
    position: absolute;
    border-radius: 50%;
    mix-blend-mode: screen;
    pointer-events: none;
    transition: transform 0.1s ease-out;
    will-change: transform;
}

.orb-1 {
    width: 600px;
    height: 600px;
    top: -20%;
    left: -10%;
    background: radial-gradient(circle at center, rgba(255, 0, 128, 0.2), rgba(255, 0, 128, 0));
    animation: pulse1 15s infinite;
}

.orb-2 {
    width: 500px;
    height: 500px;
    top: 50%;
    right: -10%;
    background: radial-gradient(circle at center, rgba(64, 179, 255, 0.2), rgba(64, 179, 255, 0));
    animation: pulse2 20s infinite;
}

.orb-3 {
    width: 400px;
    height: 400px;
    bottom: -10%;
    left: 30%;
    background: radial-gradient(circle at center, rgba(159, 0, 255, 0.2), rgba(159, 0, 255, 0));
    animation: pulse3 17s infinite;
}

.orb-4 {
    width: 300px;
    height: 300px;
    top: 20%;
    right: 20%;
    background: radial-gradient(circle at center, rgba(0, 255, 149, 0.2), rgba(0, 255, 149, 0));
    animation: pulse4 22s infinite;
}

.grid {
    position: absolute;
    inset: 0;
    display: grid;
    grid-template-columns: repeat(20, 1fr);
    opacity: 0.03;
    pointer-events: none;
}

.gridLine {
    width: 100%;
    height: 1px;
    background: currentColor;
    transform-origin: 0 0;
}

.noise {
    position: absolute;
    inset: 0;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: 0.015;
    pointer-events: none;
}

@keyframes pulse1 {
    0%, 100% { transform: scale(1) rotate(0deg); }
    50% { transform: scale(1.1) rotate(180deg); }
}

@keyframes pulse2 {
    0%, 100% { transform: scale(1) rotate(180deg); }
    50% { transform: scale(1.15) rotate(0deg); }
}

@keyframes pulse3 {
    0%, 100% { transform: scale(1) rotate(-90deg); }
    50% { transform: scale(1.2) rotate(90deg); }
}

@keyframes pulse4 {
    0%, 100% { transform: scale(1) rotate(90deg); }
    50% { transform: scale(1.1) rotate(-90deg); }
}

@keyframes moveLine {
    0% {
        transform: translateX(-30%) rotate(calc(var(--line-index) * calc(360deg / var(--total-lines))));
        opacity: 0;
    }
    20% {
        opacity: 0.5;
    }
    80% {
        opacity: 0.5;
    }
    100% {
        transform: translateX(30%) rotate(calc(var(--line-index) * calc(360deg / var(--total-lines))));
        opacity: 0;
    }
}

@keyframes pulseHex {
    0% {
        transform: scale(0) rotate(0deg);
        opacity: 0;
    }
    50% {
        transform: scale(1) rotate(180deg);
        opacity: 0.5;
    }
    100% {
        transform: scale(0) rotate(360deg);
        opacity: 0;
    }
}
