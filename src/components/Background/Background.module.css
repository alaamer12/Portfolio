.background {
    position: fixed;
    inset: 0;
    overflow: hidden;
    background: var(--bg-primary, #ffffff);
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
}

.mounted {
    opacity: 1;
}

.dark {
    background: var(--bg-primary-dark, #0a0a0a);
}

.backgroundGradient {
    position: absolute;
    inset: -50%;
    background: radial-gradient(
        circle at center,
        transparent 0%,
        rgba(var(--accent-rgb, 0, 120, 212), 0.03) 40%,
        transparent 70%
    );
    animation: rotate 60s linear infinite;
    pointer-events: none;
}

.hexGrid {
    position: absolute;
    inset: 0;
    display: grid;
    grid-template-columns: repeat(15, 1fr);
    transform: perspective(1000px) rotateX(60deg);
    transform-origin: center center;
    opacity: 0.1;
}

.hexCell {
    position: relative;
    aspect-ratio: 1;
    clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
    background: linear-gradient(
        45deg,
        rgba(var(--accent-rgb, 0, 120, 212), 0.1),
        rgba(var(--accent-rgb, 0, 120, 212), 0.2)
    );
    transition: opacity 0.3s ease;
}

.hexCell::before {
    content: '';
    position: absolute;
    inset: 1px;
    background: inherit;
    clip-path: inherit;
    opacity: 0.7;
}

.hexCell:hover {
    opacity: 1;
    animation: pulse 2s infinite;
}

.glowingLines {
    position: absolute;
    inset: 0;
    overflow: hidden;
    transform: translateZ(0);
}

.line {
    position: absolute;
    width: 100vw;
    height: 1px;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(var(--accent-rgb, 0, 120, 212), 0.2),
        rgba(var(--accent-rgb, 0, 120, 212), 0.4),
        rgba(var(--accent-rgb, 0, 120, 212), 0.2),
        transparent
    );
    animation: moveLine 8s linear infinite;
    animation-delay: calc(var(--index) * 1.6s);
    opacity: 0.3;
}

.particleField {
    position: absolute;
    inset: 0;
    perspective: 1000px;
}

.particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: rgba(var(--accent-rgb, 0, 120, 212), 0.5);
    border-radius: 50%;
    animation: float var(--duration) linear infinite;
    animation-delay: var(--delay);
    opacity: 0;
}

.overlay {
    position: absolute;
    inset: 0;
    background: radial-gradient(
        circle at 50% 50%,
        transparent 0%,
        rgba(var(--bg-rgb, 255, 255, 255), 0.03) 70%,
        rgba(var(--bg-rgb, 255, 255, 255), 0.1) 100%
    );
    pointer-events: none;
}

@keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

@keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
}

@keyframes moveLine {
    0% {
        transform: translateY(-100%) translateX(-100%) rotate(-45deg);
    }
    100% {
        transform: translateY(200%) translateX(200%) rotate(-45deg);
    }
}

@keyframes float {
    0% {
        transform: translate3d(
            calc(random() * 100vw),
            calc(random() * 100vh),
            calc(random() * 500px)
        );
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    100% {
        transform: translate3d(
            calc(random() * 100vw),
            calc(random() * 100vh),
            calc(random() * -500px)
        );
        opacity: 0;
    }
}

/* Dark mode enhancements */
.dark .hexCell {
    background: linear-gradient(
        45deg,
        rgba(var(--accent-rgb, 0, 120, 212), 0.15),
        rgba(var(--accent-rgb, 0, 120, 212), 0.3)
    );
}

.dark .line {
    opacity: 0.4;
}

.dark .particle {
    background: rgba(var(--accent-rgb, 0, 120, 212), 0.7);
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .hexGrid {
        grid-template-columns: repeat(10, 1fr);
    }
    
    .particle {
        display: none;
    }
}
